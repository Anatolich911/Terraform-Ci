name: "Reusable Terraform Workflow"

on:
  workflow_call:
    inputs:
      terraform_directory:
        required: true
        type: string
      terraform_version:
        required: true
        default: "1.7.4"
        type: string

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Terraform Init
        run: terraform -chdir=${{ inputs.terraform_directory }} init

      - name: Terraform Plan
        if: github.event_name == 'workflow_call' && github.event.action == 'pull_request'
        run: terraform -chdir=${{ inputs.terraform_directory }} plan -no-color -input=false
        continue-on-error: true

      - name: Update Pull Request
        if: github.event_name == 'workflow_call' && github.event.action == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan Output\n\`\`\`\n${{ steps.plan.outputs.stdout }}\n\`\`\``;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Apply
        if: github.event_name == 'workflow_call' && github.event.action == 'push' && github.ref == 'refs/heads/main'
        run: terraform -chdir=${{ inputs.terraform_directory }} apply -auto-approve -input=false
